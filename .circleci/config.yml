version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:10.13
  environment:
    YARN_CACHE_FOLDER: ~/.cache/yarn/v6
  working_directory: ~/openzeppelin

commands:
  test:
    parameters:
      workspace:
        type: string
        description: Yarn workspace to test
      run-yarn:
        type: boolean
        default: false
      prepare-workdir:
        type: boolean
        default: false
      test-cmd:
        type: string
        default: yarn test
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-v4-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: ~/openzeppelin
      - when:
          condition: << parameters.run-yarn >>
          steps:
            - restore_cache:
                key: yarn-cache-v6-
            - run:
                command: yarn
                working_directory: "~/openzeppelin/<< parameters.workspace >>"
      - when:
          condition: << parameters.prepare-workdir >>
          steps:
            - run:
                command: yarn
                working_directory: "~/openzeppelin/tests/cli/workdir"
      - run: 
          name: "Test << parameters.workspace >>"
          command: "<< parameters.test-cmd >>"
          working_directory: "~/openzeppelin/<< parameters.workspace >>"

jobs:

  setup:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-v4-{{ checksum "yarn.lock" }}
            - yarn-cache-v6-
      - run:
          name: Install dependencies and build
          command: yarn
      - save_cache:
          key: dependency-cache-v4-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - packages/cli/node_modules
            - packages/lib/node_modules
      - save_cache:
          key: yarn-cache-v6-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn/v6
      - persist_to_workspace:
          root: .
          paths:
            - packages/cli/lib
            - packages/cli/build
            - packages/lib/lib
            - packages/lib/build

  test-lib:
    <<: *defaults
    steps:
      - test:
          workspace: packages/lib

  test-cli:
    <<: *defaults
    steps:
      - test:
          workspace: packages/cli

  example-lib-simple:
    <<: *defaults
    steps:
      - test:
          workspace: examples/lib-simple
          run-yarn: true

  example-lib-complex:
    <<: *defaults
    steps:
      - test:
          workspace: examples/lib-complex
          run-yarn: true

  example-create-instances-from-solidity:
    <<: *defaults
    steps:
      - test:
          workspace: examples/creating-instances-from-solidity
          run-yarn: true

  example-cli-create2:
    <<: *defaults
    steps:
      - test:
          workspace: examples/cli-create2
          run-yarn: true

  example-first-project:
    <<: *defaults
    steps:
      - test:
          workspace: examples/first-project
          run-yarn: true

  integration-cli-geth: &integration
    <<: *defaults
    docker:
      - image: circleci/node:10.13
      - image: ethereum/client-go:release-1.8
        command: "--dev --dev.period=1 --rpc --rpcport=8545 --rpcaddr=localhost --networkid=9955"
    environment:
      NETWORK: "geth-dev"
    steps:
      - test:
          workspace: tests/cli/test
          run-yarn: true
          prepare-workdir: true
  
  integration-cli-hdwallet:
    <<: *integration
    environment:
      NETWORK: "geth-dev-hdwallet"

  integration-cli-kits:
    <<: *integration
    environment:
      NETWORK: "development"
    steps:
      - test:
          workspace: tests/kits/test
          run-yarn: true

workflows:
  version: 2
  test:
    jobs:
      - setup
      - test-lib:
          requires: [setup]
      - test-cli:
          requires: [setup]
      - example-lib-simple:
          requires: [test-lib]
      - example-lib-complex:
          requires: [test-lib]
      - example-create-instances-from-solidity:
          requires: [test-lib, test-cli]
      - example-cli-create2:
          requires: [test-lib, test-cli]
      - example-first-project:
          requires: [test-lib, test-cli]
      - integration-cli-geth:
          requires: [test-lib, test-cli]
      - integration-cli-hdwallet:
          requires: [test-lib, test-cli]
      - integration-cli-kits:
          requires: [test-lib, test-cli]
